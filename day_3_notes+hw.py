# -*- coding: utf-8 -*-
"""Day 3 Notes+HW.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YP05gonRxkBKjRSqGPQb5xYrhWfwXivm

# Day 3

# HW: 
 
 1. Answer the Dictionary Review Questions!

 2. Fill out the Survey!

# Dictionary Examples

# Tetris High Scores
"""

tetris = {}

tetris['Aneesha'] = 110000

tetris['Shreya'] = 50

tetris

tetris['Shreya'] = 50000

new_score = 25

if new_score > tetris['Shreya']:
  tetris['Shreya'] = new_score

del tetris['Aneesha']

def add_player(name):
  if name not in tetris.keys():
    tetris[name] = 0
  else:
    print("player already exists")

def delete_player(name):
  if name in tetris.keys():
    del tetris[name]
  else:
    print("player doesn't exist")
  

def update_score(name, new_score):
  if name in tetris.keys():
    tetris[name] = new_score
  else:
    print("player doesn't exist")


def top_score():
  highest_score = 0
  for names,scores in tetris.items():
    if scores > highest_score:
      highest_score = scores
  print(highest_score)
  

def top_player_score():
  player = ""
  top_score = 0;
  for name, score in tetris.values():
    if score > top_score:
      player = name
      top_score = score
  return name, top_score

"""# Simulating Dice"""

import random

random.randint(1,6)

roll_dist = {}

for i in range(1000000):

  dice1 = random.randint(1,6)
  dice2 = random.randint(1,6)

  roll_sum = dice1 + dice2
  
  if roll_sum in roll_dist.keys():
    roll_dist[roll_sum] = roll_dist[roll_sum] + 1
  else:
    roll_dist[roll_sum] = 1

roll_dist

1000000 / 36

"""# Generating Recommendations"""

netflix = {
    'Jasmine' : ['Frozen', 'Aladdin'],
    'Anna' : ['Lion King', 'Tangled'],
    'Repunzel' : ['Frozen', 'Lion King', 'Aladdin'],
    'Mulan' : ['Aladdin'],
}

# What movies can I recommend to Mulan?

similar_users= []

for movie in netflix['Mulan']:
  for user, movies in netflix.items():
    if user != 'Mulan':
      if 'Aladdin' in movies:
        similar_users.append(user)

rec_movies = []
for user in similar_users:
  for movie in netflix[user]:
    if movie not in rec_movies:
      rec_movies.append(movie)



for movie in rec_movies:
  if movie in netflix['Mulan']:
    rec_movies.remove(movie)

print(rec_movies)

"""# Dictionary Review Questions"""

changes = {
    'AAPL' : 5.34,
    'TSLA' : 10.89,
    'MSFT' : -3.89,
    'W' : 5.13,
    'GME' : 400
}

"""1. How would I add AMC with 200 to the dictionary?"""



"""2. How many companies are in the dictionary?"""



"""3. What is the average of all the changes?"""



"""4. Which company has the highest change?"""



"""# Dataframes

# Importing Libraries
"""

# This is an alias
import pandas as pd

"""# Dictionary to Dataframe"""

dictionary = {
    
    'Shreya' : [78, 98, 87, 56, 79],
    'Aneesha' : [87, 68, 98, 90, 45],
    'Tammy' : [100, 100, 100, 99 , 98]
    
}

df = pd.DataFrame(dictionary, index=['calculus', 'us history', 'english', 'statistics', 'biology'])

df

"""# Accessing a Column"""

df['Shreya']

"""# Adding a Row"""

df['Peanut'] = [150, 150, 150, 150, 150]

df

"""# Transpose"""

df.T

"""# Using .loc"""

df.loc[['calculus', 'biology']]

df.loc[['calculus', 'biology'], :]

df.loc[['calculus', 'biology'], 'Aneesha']

df.loc[['calculus', 'biology'], ['Shreya', 'Aneesha']]

df.loc['calculus' : 'statistics', 'Tammy']

"""# Using .iloc"""

df

df.iloc[[0, 1, 3], [0, 1, 2]]

df.iloc[0:2, 1:2]

"""# Using .at and .iat"""

df.at['calculus', 'Aneesha']

df.iat[0, 2]